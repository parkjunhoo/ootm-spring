/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-05-03 20:55:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.DecimalFormat;
import kr.team3.ootm.dao.product.ProductDTO;
import kr.team3.ootm.dao.cart.CartDTO;
import java.util.ArrayList;

public final class basket_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("kr.team3.ootm.dao.product.ProductDTO");
    _jspx_imports_classes.add("java.text.DecimalFormat");
    _jspx_imports_classes.add("kr.team3.ootm.dao.cart.CartDTO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	\r\n");

ArrayList<CartDTO> cartList = (ArrayList<CartDTO>)request.getAttribute("myCartList");
ArrayList<ProductDTO> productList = (ArrayList<ProductDTO>)request.getAttribute("myCartProductList");
Object ts = request.getAttribute("tempScroll");
String scroll = "0";
if(ts != null){
	scroll = (String)ts;
	//System.out.println((String)ts);
}

DecimalFormat priceFormat = new DecimalFormat("###,###");

int allPrice = 0;
int shippingPrice = 2500;
int resultPrice = 0;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<link rel=\"icon\" href=\"/images/favicon.ico\">\r\n");
      out.write("<title>장바구니</title>\r\n");
      out.write("\r\n");
      out.write("<!-- 글꼴 -->\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Noto+Sans+KR:wght@100;300;400;500;700;900&display=swap\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<!-- CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/reset.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/view/basket.css\" />\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/layout/header.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("logoDark", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("true", request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("logoHoverDark", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("true", request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("mTextColor", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("black", request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("menuBtnColor", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("black", request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("bgHoverColor", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("#F9F9F9", request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("bgScrollColor", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("white", request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<section id=\"basketSection\">\r\n");
      out.write("		<div class=\"basketOuter\">\r\n");
      out.write("			<div class=\"basketTitleDiv\">\r\n");
      out.write("				<h1>Shopping Bag</h1>\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("			");
int count = cartList.size();
			for(int i=0; i<count; i++){ 
			CartDTO cart = cartList.get(i);
			ProductDTO product = productList.get(i);
			int price = cart.getCart_quantity() * product.getProduct_price();
			int disRate = product.getProduct_discount_rate();
			double disPrice = disRate==0? price : price * ( (double)(100-product.getProduct_discount_rate())/100);
			disPrice= Math.ceil(disPrice);
			
			int sumPrice = (int)disPrice;
			
      out.write("\r\n");
      out.write("				<div class=\"basketForm\">\r\n");
      out.write("					<div class=\"basketDeleteDiv\">\r\n");
      out.write("						<span onclick=\"cartDelete(");
      out.print(cart.getCart_id());
      out.write(")\">✖</span>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"basketItemImgDiv\">\r\n");
      out.write("						<img\r\n");
      out.write("							src=\"");
      out.print(product.getProduct_image2());
      out.write("\">\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"basketItemDescDiv\">\r\n");
      out.write("						<h1>");
      out.print(product.getProduct_name());
      out.write("</h1>\r\n");
      out.write("						<h3>컬러:");
      out.print(cart.getColor());
      out.write(" / 사이즈:");
      out.print(cart.getSize());
      out.write("</h3>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"basketItemAmount\">\r\n");
      out.write("						<div onclick=\"cartUpdate(");
      out.print(cart.getCart_id());
      out.write(',');
      out.print(cart.getCart_quantity()-1 );
      out.write(")\" \r\n");
      out.write("						class=\"amountMinusBtn amountBtn\">-</div>\r\n");
      out.write("						<input readonly type=\"number\" name=\"amount\" value=");
      out.print(cart.getCart_quantity());
      out.write(">\r\n");
      out.write("						<div onclick=\"cartUpdate(");
      out.print(cart.getCart_id() );
      out.write(',');
      out.write(' ');
      out.print(cart.getCart_quantity()+1 );
      out.write(")\" \r\n");
      out.write("						class=\"amountPlusBtn amountBtn\">+</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"basketItemPriceDiv\">\r\n");
      out.write("						<h1>");
      out.print(priceFormat.format(sumPrice) );
      out.write("원</h1>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				");
allPrice += sumPrice;
      out.write("\r\n");
      out.write("			");
}
				if(allPrice >= 50000){
					shippingPrice = 0;
				}
				resultPrice = allPrice + shippingPrice;
			
      out.write("\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			<div id=\"basketSummaryDiv\">\r\n");
      out.write("				<p class=\"infoP\">5만원 이상 구매시 무료배송</p>\r\n");
      out.write("				<div id=\"basketSummaryListDiv\">\r\n");
      out.write("					<div id=\"basketSubTotalDiv\" class=\"summaryList\">\r\n");
      out.write("						<p class=\"label\">주문 금액</p>\r\n");
      out.write("						<p class=\"value\">");
      out.print(priceFormat.format(allPrice));
      out.write("원</p>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div id=\"basketShippingDiv\" class=\"summaryList\">\r\n");
      out.write("						<p class=\"label\">배송비</p>\r\n");
      out.write("						");
if(shippingPrice == 0){
      out.write("\r\n");
      out.write("							<p class=\"value\">무료 배송</p>\r\n");
      out.write("						");
}else{
      out.write("\r\n");
      out.write("						<p class=\"value\">");
      out.print(shippingPrice );
      out.write("</p>\r\n");
      out.write("						");
}
      out.write("\r\n");
      out.write("					</div>\r\n");
      out.write("					<hr noshade=\"true\">\r\n");
      out.write("					<div id=\"basketTotalDiv\" class=\"summaryList\">\r\n");
      out.write("						<h1 id=\"totalLabel\" class=\"label\">합계</h1>\r\n");
      out.write("						<h1 id=\"totalValue\" class=\"value\">");
      out.print(priceFormat.format(resultPrice));
      out.write("원</h1>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div onclick=\"location.href='/payment'\" id=\"basketCheckOutBtn\">\r\n");
      out.write("						<span>CHECK OUT</span>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</section>\r\n");
      out.write("\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/layout/footer.jsp", out, false);
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		//console.log(");
      out.print(scroll);
      out.write(");\r\n");
      out.write("		window.scrollTo(0,");
      out.print(scroll );
      out.write(");\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("		function cartDelete(id){\r\n");
      out.write("	 		let form = document.createElement(\"form\");\r\n");
      out.write("		    form.setAttribute(\"action\", \"/cart/delete.do\");\r\n");
      out.write("			form.setAttribute(\"method\", \"post\");\r\n");
      out.write("		    document.charset = \"UTF-8\";\r\n");
      out.write("		    \r\n");
      out.write("		    let input = document.createElement(\"input\");\r\n");
      out.write("		    input.setAttribute(\"type\", \"hidden\");\r\n");
      out.write("		    input.setAttribute(\"name\", \"cart_id\");\r\n");
      out.write("		    input.setAttribute(\"value\", id);\r\n");
      out.write("		    form.appendChild(input);\r\n");
      out.write("		    \r\n");
      out.write("		    let input2 = document.createElement(\"input\");\r\n");
      out.write("		    input2.setAttribute(\"type\", \"hidden\");\r\n");
      out.write("		    input2.setAttribute(\"name\", \"tempScroll\");\r\n");
      out.write("		    input2.setAttribute(\"value\", window.scrollY);\r\n");
      out.write("		    form.appendChild(input2);\r\n");
      out.write("		    \r\n");
      out.write("		    document.body.appendChild(form);\r\n");
      out.write("		    form.submit();\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		function cartUpdate(id,num){\r\n");
      out.write("			if(num<=0){\r\n");
      out.write("				cartDelete(id);\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			let form = document.createElement(\"form\");\r\n");
      out.write("		    form.setAttribute(\"action\", \"/cart/update.do\");\r\n");
      out.write("			form.setAttribute(\"method\", \"post\");\r\n");
      out.write("		    document.charset = \"UTF-8\";\r\n");
      out.write("		    \r\n");
      out.write("		    let input = document.createElement(\"input\");\r\n");
      out.write("		    input.setAttribute(\"type\", \"hidden\");\r\n");
      out.write("		    input.setAttribute(\"name\", \"cart_id\");\r\n");
      out.write("		    input.setAttribute(\"value\", id);\r\n");
      out.write("		    form.appendChild(input);\r\n");
      out.write("		    \r\n");
      out.write("		    let input2 = document.createElement(\"input\");\r\n");
      out.write("		    input2.setAttribute(\"type\", \"hidden\");\r\n");
      out.write("		    input2.setAttribute(\"name\", \"cart_quantity\");\r\n");
      out.write("		    input2.setAttribute(\"value\", num);\r\n");
      out.write("		    form.appendChild(input2);\r\n");
      out.write("		    \r\n");
      out.write("		    let input3 = document.createElement(\"input\");\r\n");
      out.write("		    input3.setAttribute(\"type\", \"hidden\");\r\n");
      out.write("		    input3.setAttribute(\"name\", \"tempScroll\");\r\n");
      out.write("		    input3.setAttribute(\"value\", window.scrollY);\r\n");
      out.write("		    form.appendChild(input3);\r\n");
      out.write("		    \r\n");
      out.write("		    document.body.appendChild(form);\r\n");
      out.write("		    form.submit(); \r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
