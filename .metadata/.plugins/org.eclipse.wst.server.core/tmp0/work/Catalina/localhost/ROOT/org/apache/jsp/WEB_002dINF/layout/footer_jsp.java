/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-05-03 22:48:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.layout;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import util.LoginManager;

public final class footer_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("util.LoginManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	boolean isLoggedIn = LoginManager.isLoggedIn(session);

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\" />\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("	<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/layout/footer.css\"/>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<footer>\r\n");
      out.write("		<div class=\"footerOuter\">\r\n");
      out.write("			<hr>\r\n");
      out.write("			<div class=\"footerContentDiv\">\r\n");
      out.write("				<div class=\"footerContentLeftDiv\">\r\n");
      out.write("					<div class=\"deskInfo\">\r\n");
      out.write("						<p>\r\n");
      out.write("							문자 메세지 수신불가 / 카톡 상담, Q &amp; A 게시판 이용 <br> 10:00 AM ~ 6:30\r\n");
      out.write("							PM (Lunch time 12:00 AM ~ 1:00 PM) <br> 토,일요일 및 공휴일 휴무\r\n");
      out.write("						</p>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"deskLinkDiv\">\r\n");
      out.write("						<!-- <a href=\"/helpdesk/qna\">개인정보취급방침\r\n");
      out.write("							<div class=\"footerTextUnderline\"></div>\r\n");
      out.write("						</a><a href=\"/helpdesk?desk=qna\">약관\r\n");
      out.write("							<div class=\"footerTextUnderline\"></div> -->\r\n");
      out.write("						</a><a href=\"/helpdesk/qna\">자주묻는질문\r\n");
      out.write("							<div class=\"footerTextUnderline\"></div>\r\n");
      out.write("						</a><a href=\"/helpdesk/inquiry\">문의게시판\r\n");
      out.write("							<div class=\"footerTextUnderline\"></div>\r\n");
      out.write("						</a>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"footerContentRightDiv\">\r\n");
      out.write("					<div class=\"footerMenuDiv\">\r\n");
      out.write("						<h5>OOTM News</h5>\r\n");
      out.write("						<a href=\"/helpdesk/notice\">유선 문의 불가 안내<span class=\"date\">08.16</span></a><a\r\n");
      out.write("							href=\"/helpdesk/notice\">2022년 8월 휴무 일정 안내<span class=\"date\">07.27</span></a><a\r\n");
      out.write("							href=\"/helpdesk/notice\">2022년 6월 휴무 일정 안내<span class=\"date\">05.31</span></a>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"footerMenuDiv\">\r\n");
      out.write("						<h5>My Account</h5>\r\n");
      out.write("						<a ");
if(isLoggedIn){
      out.write("href=\"/mypage\"");
}else{
      out.write("href=\"/login\"");
}
      out.write(">마이페이지</a>\r\n");
      out.write("						<a ");
if(isLoggedIn){
      out.write("href=\"/mypage/orderlist\"");
}else{
      out.write("href=\"/login\"");
}
      out.write(">주문내역</a>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"footerMenuDiv\">\r\n");
      out.write("						<h5>Shipping &amp; Returns</h5>\r\n");
      out.write("						<a href=\"/helpdesk/inquiry\">문의게시판</a>\r\n");
      out.write("						<a href=\"/helpdesk/returns\">교환반품안내</a>\r\n");
      out.write("						<a target=”_blank” href=\"https://www.cjlogistics.com/ko/tool/parcel/reservation-return\">CJ대한통운\r\n");
      out.write("							택배 반품접수</a>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div style=\"display:flex; flex-direction: column; \" class=\"footerIconMenu\">\r\n");
      out.write("						<a href=\"https://ko-kr.facebook.com/\">facebook</a>\r\n");
      out.write("						<a href=\"https://www.instagram.com/\">instagram</a>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"companyDescDiv\">\r\n");
      out.write("				<ul>\r\n");
      out.write("					<li>상호 OOTM</li>\r\n");
      out.write("					<li>3조</li>\r\n");
      out.write("					<li>경기도 세종시 멀티캠퍼스 학원</li>\r\n");
      out.write("					<li>사업자등록번호 <a href=\"/\">###-##-#####</a></li>\r\n");
      out.write("					<li>통신판매업신고번호 제####-@@@@-#### 호</li>\r\n");
      out.write("					<li>개인정보담당자 주지현 <a href=\"/\">jhjoo0221@naver.com</a></li>\r\n");
      out.write("					<li>반품주소: ##### 경기도 세종시 5층 OOTM사</li>\r\n");
      out.write("					<li>입금계좌: 농협은행 ###-####-####-## 주지현(OOTM)</li>\r\n");
      out.write("				</ul>\r\n");
      out.write("				<p class=\"copyright\">© 2023 OOTM, Inc. All rights reserved.</p>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
