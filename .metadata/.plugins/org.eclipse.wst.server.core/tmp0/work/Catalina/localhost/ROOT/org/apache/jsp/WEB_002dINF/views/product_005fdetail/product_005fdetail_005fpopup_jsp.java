/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-05-04 05:01:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.product_005fdetail;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import kr.team3.ootm.dao.member.MemberDTO;
import java.util.List;
import kr.team3.ootm.dao.product.ProductDTO;
import kr.team3.ootm.dao.product.ProductDAO;
import kr.team3.ootm.dao.review.ReviewDTO;

public final class product_005fdetail_005fpopup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("kr.team3.ootm.dao.product.ProductDTO");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("kr.team3.ootm.dao.product.ProductDAO");
    _jspx_imports_classes.add("kr.team3.ootm.dao.review.ReviewDTO");
    _jspx_imports_classes.add("kr.team3.ootm.dao.member.MemberDTO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

ProductDTO product = (ProductDTO) request.getAttribute("product");
List<ReviewDTO> review = (List<ReviewDTO>) request.getAttribute("reviewList");
int size = review.size();	

String memberName = "";
if(session.getAttribute("loginUser") != null){
	MemberDTO member = (MemberDTO)session.getAttribute("loginUser");
	memberName = member.getMember_name();
}


      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap-theme.min.css\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n");
      out.write("  <script src=\"https://code.jquery.com/jquery-3.4.1.min.js\">\r\n");
      out.write("  <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script> -->\r\n");
      out.write("<div class=\"modal fade\" id=\"reviewModal\" tabindex=\"-1\" role=\"dialog\"\r\n");
      out.write("	aria-labelledby=\"reviewModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("	<div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("		<div class=\"modal-content\">\r\n");
      out.write("			<div class=\"modal-header\">\r\n");
      out.write("				<h5 class=\"modal-title\" id=\"reviewModalLabel\">제품 이름</h5>\r\n");
      out.write("				<button type=\"button\" class=\"close\" data-dismiss=\"modal\"\r\n");
      out.write("					aria-label=\"Close\">\r\n");
      out.write("					<span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("				</button>\r\n");
      out.write("			</div>\r\n");
      out.write("			<form role=\"form\" class=\"form-horizontal\" action=\"/review/insert.do\"\r\n");
      out.write("				method=\"POST\" name=\"review\">\r\n");
      out.write("				<div class=\"modal-body\">\r\n");
      out.write("					<h3>리뷰를 남겨주세요</h3>\r\n");
      out.write("					<div id=\"rating\">\r\n");
      out.write("						<!-- 별점 입력 부분 -->\r\n");
      out.write("\r\n");
      out.write("						<fieldset class=\"rating\">\r\n");
      out.write("							<input type=\"radio\" id=\"star5\" name=\"review_star\" value=\"5\" /><label\r\n");
      out.write("								for=\"star5\" title=\"5점\">5 stars</label> <input type=\"radio\"\r\n");
      out.write("								id=\"star4\" name=\"review_star\" value=\"4\" /><label for=\"star4\"\r\n");
      out.write("								title=\"4점\">4 stars</label> <input type=\"radio\" id=\"star3\"\r\n");
      out.write("								name=\"review_star\" value=\"3\" /><label for=\"star3\" title=\"3점\">3\r\n");
      out.write("								stars</label> <input type=\"radio\" id=\"star2\" name=\"review_star\"\r\n");
      out.write("								value=\"2\" /><label for=\"star2\" title=\"2점\">2 stars</label> <input\r\n");
      out.write("								type=\"radio\" id=\"star1\" name=\"review_star\" value=\"1\" /><label\r\n");
      out.write("								for=\"star1\" title=\"1점\">1 star</label>\r\n");
      out.write("						</fieldset>\r\n");
      out.write("\r\n");
      out.write("					</div>\r\n");
      out.write("					<hr>\r\n");
      out.write("					<hr>\r\n");
      out.write("					<hr>\r\n");
      out.write("					<!-- <form id=\"reviewForm\"> -->\r\n");
      out.write("					\r\n");
      out.write("					<div class=\"form-group\">\r\n");
      out.write("						<div class=\"center\">\r\n");
      out.write("							<label for=\"productName\">상품</label> <input type=\"hidden\"  \r\n");
      out.write("								class=\"form-control\" id=\"ProductId\" name=\"product_id\" \r\n");
      out.write("								value=\"");
      out.print(product.getProduct_id());
      out.write("\">\r\n");
      out.write("								<input type=\"text\" readonly style=\"text-align:center\" \r\n");
      out.write("								class=\"form-control\" id=\"ProductName\"\r\n");
      out.write("								value=\"");
      out.print(product.getProduct_name());
      out.write("\">\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"form-group\">\r\n");
      out.write("						<label for=\"reviewerHeight\">이름</label> <input readonly type=\"text\" value=\"");
      out.print(memberName);
      out.write("\"\r\n");
      out.write("							class=\"form-control\" id=\"reviewerName\" name=\"review_author_id\"\r\n");
      out.write("							placeholder=\"이름을 입력하세요\">\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"form-group\">\r\n");
      out.write("						<label for=\"reviewText\">리뷰 내용</label>\r\n");
      out.write("						<textarea class=\"form-control\" id=\"reviewText\" rows=\"3\"\r\n");
      out.write("							name=\"review_content\" placeholder=\"리뷰 내용을 입력하세요\"></textarea>\r\n");
      out.write("					</div>\r\n");
      out.write("					<!-- </form> -->\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"modal-footer\">\r\n");
      out.write("					<button type=\"button\" class=\"btn btn-secondary\"\r\n");
      out.write("						data-dismiss=\"modal\">닫기</button>\r\n");
      out.write("					<!-- 					<button type=\"button\" class=\"btn btn-primary\"\r\n");
      out.write("						onclick=\"submitReview()\">리뷰 작성하기</button> -->\r\n");
      out.write("					<div class=\"col-sm-3 col-sm-offset-2\">\r\n");
      out.write("						<input type=\"submit\" value=\"등록하기\" class=\"btn btn-success\" />\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
