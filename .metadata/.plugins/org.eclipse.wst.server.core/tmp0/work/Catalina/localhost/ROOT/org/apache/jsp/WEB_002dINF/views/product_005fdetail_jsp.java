/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-05-02 05:33:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class product_005fdetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://fonts.googleapis.com/css?family=Montserrat:400,500,700\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/earlyaccess/notosanskr.css\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<title>홈쇼핑웹 상품 상세 페이지</title>\r\n");
      out.write("<link rel=\"icon\" href=\"/images/favicon.ico\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/view/1.css\">\r\n");
      out.write("\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n");
      out.write("<style>\r\n");
      out.write(".content-container {\r\n");
      out.write("	margin-left: 70px;\r\n");
      out.write("	margin-right: 70px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/layout/header.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("logoDark", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("true", request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("logoHoverDark", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("true", request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("mTextColor", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("black", request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("menuBtnColor", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("black", request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("bgHoverColor", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("#F9F9F9", request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("bgScrollColor", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("white", request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("	<div class=\"content-container\">\r\n");
      out.write("		<!-- 섹션 1: 제품 이름 및 구매 버튼 -->\r\n");
      out.write("\r\n");
      out.write("		<section style=\"padding-top: 150px;\">\r\n");
      out.write("			<h1>B 라벨 카라 T - NEW</h1>\r\n");
      out.write("			<span class=\"price-now\">34,000</span>\r\n");
      out.write("			<div class=\"option-detail\">\r\n");
      out.write("				Free : 95~105<br> 디테일 수정 및 컬러 변경 ! <br> 한경 : 170/58,\r\n");
      out.write("				베이지(삭제) 그린 블루(삭제) 블랙 착용<br> 이탁 : 170/52, 그레이 착용 - 추 후 피팅사진 업데이트\r\n");
      out.write("				예정\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"text-center\">\r\n");
      out.write("				<div id=\"carouselExample\" class=\"carousel slide\"\r\n");
      out.write("					data-ride=\"carousel carousel-dark\">\r\n");
      out.write("					<div class=\"carousel-inner\">\r\n");
      out.write("						<div class=\"carousel-item active\">\r\n");
      out.write("							<img src=\"../images/A.jpg\" class=\"d-block w-50\" alt=\"제품 이미지 1\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"carousel-item\">\r\n");
      out.write("							<img src=\"../images/B.jpg\" class=\"d-block w-50\" alt=\"제품 이미지 2\">\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"carousel-item\">\r\n");
      out.write("							<img src=\"../images/C.jpg\" class=\"d-block w-50\" alt=\"제품 이미지 3\">\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<a class=\"carousel-control-prev\" href=\"#carouselExample\"\r\n");
      out.write("						role=\"button\" data-slide=\"prev\"> <span\r\n");
      out.write("						class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span> <span\r\n");
      out.write("						class=\"sr-only\">이전</span>\r\n");
      out.write("					</a> <a class=\"carousel-control-next\" href=\"#carouselExample\"\r\n");
      out.write("						role=\"button\" data-slide=\"next\"> <span\r\n");
      out.write("						class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span> <span\r\n");
      out.write("						class=\"sr-only\">다음</span>\r\n");
      out.write("					</a>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<!-- 위시리스트 버튼 -->\r\n");
      out.write("			<button class=\"wishlist-btn\" onclick=\"toggleWishlist(this)\">\r\n");
      out.write("				<i class=\"fa fa-heart-o\" aria-hidden=\"true\"></i>\r\n");
      out.write("			</button>\r\n");
      out.write("			<script src=\"https://kit.fontawesome.com/your-font-awesome-kit.js\"\r\n");
      out.write("				crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("			<button class=\"buy-now-button\" data-toggle=\"modal\"\r\n");
      out.write("				data-target=\"#orderModal\">BUY NOW</button>\r\n");
      out.write("		</section>\r\n");
      out.write("		<!-- 팝업 상품 주문 폼 -->\r\n");
      out.write("\r\n");
      out.write("		<div class=\"modal fade\" id=\"orderModal\" tabindex=\"-1\" role=\"dialog\"\r\n");
      out.write("			aria-labelledby=\"orderModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("			<div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("				<div class=\"modal-content\">\r\n");
      out.write("					<div class=\"modal-header\">\r\n");
      out.write("						<h5 class=\"modal-title\" id=\"orderModalLabel\">상품 주문 폼</h5>\r\n");
      out.write("						<button type=\"button\" class=\"close\" data-dismiss=\"modal\"\r\n");
      out.write("							aria-label=\"Close\">\r\n");
      out.write("							<span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("						</button>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"modal-body\">\r\n");
      out.write("						<h3>옵션과 수량 선택</h3>\r\n");
      out.write("						<hr>\r\n");
      out.write("						<h4>컬러</h4>\r\n");
      out.write("						<button class=\"color-btn\" onclick=\"selectColor(this)\">Black</button>\r\n");
      out.write("						<button class=\"color-btn\" onclick=\"selectColor(this)\">Green</button>\r\n");
      out.write("						<button class=\"color-btn\" onclick=\"selectColor(this)\">Gray</button>\r\n");
      out.write("						<h4>사이즈</h4>\r\n");
      out.write("						<button class=\"size-btn\" onclick=\"selectSize(this)\">Free</button>\r\n");
      out.write("\r\n");
      out.write("						<h4>수량</h4>\r\n");
      out.write("						<div class=\"quantity-container\">\r\n");
      out.write("							<button class=\"quantity-btn\" onclick=\"decreaseQuantity()\">-</button>\r\n");
      out.write("							<input type=\"text\" id=\"quantity\" value=\"1\" readonly>\r\n");
      out.write("							<button class=\"quantity-btn\" onclick=\"increaseQuantity()\">+</button>\r\n");
      out.write("						</div>\r\n");
      out.write("						<hr>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<div class=\"modal-footer\">\r\n");
      out.write("						<button type=\"button\" class=\"btn btn-secondary\"\r\n");
      out.write("							data-dismiss=\"modal\">Close</button>\r\n");
      out.write("						<button type=\"button\" class=\"btn btn-primary\">ADD TO BAG</button>\r\n");
      out.write("						<button type=\"button\" class=\"btn btn-primary\" >BUY NOW</button>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<!-- 섹션 2: 상세 정보 -->\r\n");
      out.write("		<section>\r\n");
      out.write("			<h1>상세 정보</h1>\r\n");
      out.write("			<img src=\"http://yam0513.diskn.com/top/TS/990392/a_01.jpg\"\r\n");
      out.write("				style=\"display: block; margin: 0 auto;\"> <img\r\n");
      out.write("				src=\"http://yam0513.diskn.com/top/TS/990392/a_05.jpg\"\r\n");
      out.write("				style=\"display: block; margin: 0 auto;\">\r\n");
      out.write("		</section>\r\n");
      out.write("		<!-- 섹션 3: 리뷰 -->\r\n");
      out.write("		<section>\r\n");
      out.write("			<h1 class=\"testh1\">Reviews</h1>\r\n");
      out.write("			<button class=\"review_button\" data-toggle=\"modal\"\r\n");
      out.write("				data-target=\"#reviewModal\">리뷰 작성하기</button>\r\n");
      out.write("			<ul>리뷰 작성 시 텍스트 리뷰 500원, 포토리뷰 + 텍스트 리뷰는 1,000원, 착용샷 + 텍스트는\r\n");
      out.write("				2,000원의 적립금을 드립니다.\r\n");
      out.write("			</ul>\r\n");
      out.write("		</section>\r\n");
      out.write("		<!-- 팝업 리뷰 작성 폼 -->\r\n");
      out.write("<div class=\"modal fade\" id=\"reviewModal\" tabindex=\"-1\" role=\"dialog\"\r\n");
      out.write("	aria-labelledby=\"reviewModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("	<div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("		<div class=\"modal-content\">\r\n");
      out.write("			<div class=\"modal-header\">\r\n");
      out.write("				<h5 class=\"modal-title\" id=\"reviewModalLabel\">제품 이름</h5>\r\n");
      out.write("				<button type=\"button\" class=\"close\" data-dismiss=\"modal\"\r\n");
      out.write("					aria-label=\"Close\">\r\n");
      out.write("					<span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("				</button>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"modal-body\">\r\n");
      out.write("				<h3>리뷰를 남겨주세요</h3>\r\n");
      out.write("\r\n");
      out.write("				<div id=\"rating\">\r\n");
      out.write("					<!-- 별점 입력 부분 -->\r\n");
      out.write("					<fieldset class=\"rating\">\r\n");
      out.write("						<input type=\"radio\" id=\"star5\" name=\"rating\" value=\"5\" /><label\r\n");
      out.write("							for=\"star5\" title=\"5점\">5 stars</label> <input type=\"radio\"\r\n");
      out.write("							id=\"star4\" name=\"rating\" value=\"4\" /><label for=\"star4\"\r\n");
      out.write("							title=\"4점\">4 stars</label> <input type=\"radio\" id=\"star3\"\r\n");
      out.write("							name=\"rating\" value=\"3\" /><label for=\"star3\" title=\"3점\">3\r\n");
      out.write("							stars</label> <input type=\"radio\" id=\"star2\" name=\"rating\" value=\"2\" /><label\r\n");
      out.write("							for=\"star2\" title=\"2점\">2 stars</label> <input type=\"radio\"\r\n");
      out.write("							id=\"star1\" name=\"rating\" value=\"1\" /><label for=\"star1\"\r\n");
      out.write("							title=\"1점\">1 star</label>\r\n");
      out.write("					</fieldset>\r\n");
      out.write("				</div>\r\n");
      out.write("				<form id=\"reviewForm\">\r\n");
      out.write("					<div class=\"form-group\">\r\n");
      out.write("						<label for=\"reviewerName\">이름</label> <input type=\"text\"\r\n");
      out.write("							class=\"form-control\" id=\"reviewerName\" placeholder=\"이름을 입력하세요\">\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"form-group\">\r\n");
      out.write("						<label for=\"reviewText\">리뷰 내용</label>\r\n");
      out.write("						<textarea class=\"form-control\" id=\"reviewText\" rows=\"3\"\r\n");
      out.write("							placeholder=\"리뷰 내용을 입력하세요\"></textarea>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"form-group\">\r\n");
      out.write("						<label for=\"imageUpload\">이미지 업로드</label> <input type=\"file\"\r\n");
      out.write("							class=\"form-control-file\" id=\"imageUpload\">\r\n");
      out.write("					</div>\r\n");
      out.write("				</form>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"modal-footer\">\r\n");
      out.write("				<button type=\"button\" class=\"btn btn-secondary\"\r\n");
      out.write("					data-dismiss=\"modal\">닫기</button>\r\n");
      out.write("				<button type=\"button\" class=\"btn btn-primary\"\r\n");
      out.write("					onclick=\"submitReview()\">리뷰 작성하기</button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("		\r\n");
      out.write("		<!-- 섹션 4: Q&A -->\r\n");
      out.write("		<section>\r\n");
      out.write("			<h1 class=\"testh1\">Q&A</h1>\r\n");
      out.write("			<button class=\"Q-A_button\" data-toggle=\"modal\"\r\n");
      out.write("				data-target=\"#productInquiryModal\">상품 문의하기</button>\r\n");
      out.write("			<ul>궁금한 점이 있으신가요? 언제든지 질문해주세요.\r\n");
      out.write("			</ul>\r\n");
      out.write("		</section>\r\n");
      out.write("		<!-- 상품 문의하기 모달 -->\r\n");
      out.write("		<div class=\"modal fade\" id=\"productInquiryModal\" tabindex=\"-1\"\r\n");
      out.write("			role=\"dialog\" aria-labelledby=\"productInquiryModalLabel\"\r\n");
      out.write("			aria-hidden=\"true\">\r\n");
      out.write("			<div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("				<div class=\"modal-content\">\r\n");
      out.write("					<div class=\"modal-header\">\r\n");
      out.write("						<h5 class=\"modal-title\" id=\"productInquiryModalLabel\">상품 문의하기</h5>\r\n");
      out.write("						<button type=\"button\" class=\"close\" data-dismiss=\"modal\"\r\n");
      out.write("							aria-label=\"Close\">\r\n");
      out.write("							<span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("						</button>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"modal-body\">\r\n");
      out.write("						<form id=\"productInquiryForm\">\r\n");
      out.write("							<div class=\"form-group\">\r\n");
      out.write("								<label for=\"inquirerName\">이름</label> <input type=\"text\"\r\n");
      out.write("									class=\"form-control\" id=\"inquirerName\" required>\r\n");
      out.write("							</div>\r\n");
      out.write("							\r\n");
      out.write("						\r\n");
      out.write("							<div class=\"form-group\">\r\n");
      out.write("								<label for=\"inquiryTitle\">제목</label> <input type=\"text\"\r\n");
      out.write("									class=\"form-control\" id=\"inquiryTitle\" required>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"form-group\">\r\n");
      out.write("								<label for=\"inquiryContent\">문의 내용</label>\r\n");
      out.write("								<textarea class=\"form-control\" id=\"inquiryContent\" rows=\"3\"\r\n");
      out.write("									required></textarea>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"form-group\">\r\n");
      out.write("								<label for=\"attachment\">파일 첨부</label> <input type=\"file\"\r\n");
      out.write("									class=\"form-control-file\" id=\"attachment\">\r\n");
      out.write("							</div>\r\n");
      out.write("						</form>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"modal-footer\">\r\n");
      out.write("						<button type=\"button\" class=\"btn btn-secondary\"\r\n");
      out.write("							data-dismiss=\"modal\">닫기</button>\r\n");
      out.write("						<button type=\"button\" class=\"btn btn-primary\"\r\n");
      out.write("							onclick=\"submitInquiry()\">문의하기</button>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<!-- 섹션 5: Shopping -->\r\n");
      out.write("		<section>\r\n");
      out.write("			<h1 class=\"testh1\">Shopping</h1>\r\n");
      out.write("			<ul class=\"info-list testfont\">\r\n");
      out.write("				<li>OOTM 에서 구매하신 상품은 CJ 대한통운 택배를 통해 안전하게 고객님께 배송됩니다.</li>\r\n");
      out.write("				<li>택배는 월~금 오후 6시에 출고되며, 토, 일 및 공휴일은 출고되지 않습니다.</li>\r\n");
      out.write("				<li>주문 시 장바구니 상품 합계 금액이 50,000원 이상은 무료배송이며, 그 미만일 경우 3,000원의\r\n");
      out.write("					배송비가 추가됩니다.</li>\r\n");
      out.write("				<li>배송 준비기간은 결제 확인 시점으로부터 평균 3일 이내입니다. 단, 재고 소진으로 인해 재입고가 될 경우\r\n");
      out.write("					며칠 더 소요될 수 있습니다.</li>\r\n");
      out.write("				<li>촬영 사진과 실제 상품은 화면에 보여지는 이미지와 다소 차이가 있을 수 있습니다.<br> 또한\r\n");
      out.write("					상품 사이즈는 측정하는 위치 등 여러 요인에 따라 오차가 발생할 수 있으니 참고 바랍니다.\r\n");
      out.write("				</li>\r\n");
      out.write("			</ul>\r\n");
      out.write("		</section>\r\n");
      out.write("		<!-- 섹션 6: Returns & Refunds -->\r\n");
      out.write("		<section>\r\n");
      out.write("			<h1 class=\"testh1\">Returns & Refunds</h1>\r\n");
      out.write("			<ul class=\"info-list testfont\">\r\n");
      out.write("				<li>상품 수령일로부터 7일 이내에는 반품 및 환불이 가능합니다. (단, 주말, 공휴일을 제외하고 수령일로부터\r\n");
      out.write("					7일 이내에 OOTM에 상품이 회수되어야 가능)</li>\r\n");
      out.write("				<li>아래의 사유는 환불이 불가능합니다.<br> 처음 출고된 상태와 달라진 경우 (세탁, 착용, 수선\r\n");
      out.write("					등) / 일부 구성품이 훼손 또는 제거 된 경우 (택, 단추, 패키지 아이템 등) / 일부 품목 (속옷류 및 일부\r\n");
      out.write("					액세서리 제품 등)\r\n");
      out.write("				</li>\r\n");
      out.write("				<li>상품이 불량인 경우 동일상품으로 교환(배송비 OOTM 부담) 또는 배송비를 포함한 전액 환불이 가능합니다.<br>\r\n");
      out.write("					단, 단순 변심 및 제품의 실밥, 주름 등 허용 범위 내의 제품 특성으로 인한 교환/환불의 경우 왕복 배송비를 차감한\r\n");
      out.write("					금액이 환불됩니다.\r\n");
      out.write("				</li>\r\n");
      out.write("				<li>동일상품 사이즈 교환의 경우 교환 사유가 고객 변심의 범주인 관계로, 편도 배송비를(3,000원)\r\n");
      out.write("					부담해주셔야 합니다.</li>\r\n");
      out.write("				<li>이미 상품이 출고된 이후에는 상품을 다시 회수받은 뒤에 환불 처리가 가능합니다.</li>\r\n");
      out.write("			</ul>\r\n");
      out.write("		</section>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<script>\r\n");
      out.write("			function submitReview() {\r\n");
      out.write("				const reviewerName = document.getElementById(\"reviewerName\").value;\r\n");
      out.write("				const reviewerHeight = document\r\n");
      out.write("						.getElementById(\"reviewerHeight\").value;\r\n");
      out.write("				const reviewerWeight = document\r\n");
      out.write("						.getElementById(\"reviewerWeight\").value;\r\n");
      out.write("				const productSize = document.getElementById(\"productSize\").value;\r\n");
      out.write("				const reviewText = document.getElementById(\"reviewText\").value;\r\n");
      out.write("				const rating = document\r\n");
      out.write("						.querySelector('input[name=\"rating\"]:checked').value;\r\n");
      out.write("				const imageUpload = document.getElementById(\"imageUpload\").files[0];\r\n");
      out.write("\r\n");
      out.write("				const reviewSection = document.createElement(\"div\");\r\n");
      out.write("				reviewSection.className = \"review-section\";\r\n");
      out.write("\r\n");
      out.write("				const nameAndRating = document.createElement(\"div\");\r\n");
      out.write("				nameAndRating.className = \"name-and-rating\";\r\n");
      out.write("				nameAndRating.innerHTML = `<strong>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${reviewerName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</strong> <span>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rating}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("점</span>`;\r\n");
      out.write("				reviewSection.appendChild(nameAndRating);\r\n");
      out.write("\r\n");
      out.write("				const heightAndWeight = document.createElement(\"div\");\r\n");
      out.write("				heightAndWeight.className = \"height-and-weight\";\r\n");
      out.write("				heightAndWeight.innerHTML = `키: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${reviewerHeight}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("cm, 체중: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${reviewerWeight}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("kg, 사이즈: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${productSize}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`;\r\n");
      out.write("				reviewSection.appendChild(heightAndWeight);\r\n");
      out.write("\r\n");
      out.write("				const reviewContent = document.createElement(\"p\");\r\n");
      out.write("				reviewContent.className = \"review-content\";\r\n");
      out.write("				reviewContent.textContent = reviewText;\r\n");
      out.write("				reviewSection.appendChild(reviewContent);\r\n");
      out.write("\r\n");
      out.write("				if (imageUpload) {\r\n");
      out.write("					const imageUrl = URL.createObjectURL(imageUpload);\r\n");
      out.write("					const reviewImage = document.createElement(\"img\");\r\n");
      out.write("					reviewImage.src = imageUrl;\r\n");
      out.write("					reviewImage.className = \"review-image\";\r\n");
      out.write("					reviewSection.appendChild(reviewImage);\r\n");
      out.write("				}\r\n");
      out.write("\r\n");
      out.write("				document.querySelector(\"section:nth-child(3)\").appendChild(\r\n");
      out.write("						reviewSection);\r\n");
      out.write("				$(\"#reviewModal\").modal(\"hide\");\r\n");
      out.write("			}\r\n");
      out.write("			function increaseQuantity() {\r\n");
      out.write("				let quantityInput = document.getElementById('quantity');\r\n");
      out.write("				let quantity = parseInt(quantityInput.value);\r\n");
      out.write("				quantityInput.value = quantity + 1;\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			function decreaseQuantity() {\r\n");
      out.write("				let quantityInput = document.getElementById('quantity');\r\n");
      out.write("				let quantity = parseInt(quantityInput.value);\r\n");
      out.write("				if (quantity > 1) {\r\n");
      out.write("					quantityInput.value = quantity - 1;\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("			function selectColor(btn) {\r\n");
      out.write("				let colorButtons = document.getElementsByClassName('color-btn');\r\n");
      out.write("				for (let i = 0; i < colorButtons.length; i++) {\r\n");
      out.write("					colorButtons[i].classList.remove('selected');\r\n");
      out.write("				}\r\n");
      out.write("				btn.classList.add('selected');\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			function selectSize(btn) {\r\n");
      out.write("				let sizeButtons = document.getElementsByClassName('size-btn');\r\n");
      out.write("				for (let i = 0; i < sizeButtons.length; i++) {\r\n");
      out.write("					sizeButtons[i].classList.remove('selected');\r\n");
      out.write("				}\r\n");
      out.write("				btn.classList.add('selected');\r\n");
      out.write("			}\r\n");
      out.write("			function submitReview() {\r\n");
      out.write("				const reviewerName = document.getElementById('reviewerName').value;\r\n");
      out.write("				const reviewText = document.getElementById('reviewText').value;\r\n");
      out.write("\r\n");
      out.write("				const reviewSection = document\r\n");
      out.write("						.querySelector('section:nth-of-type(3)');\r\n");
      out.write("				const newReview = document.createElement('div');\r\n");
      out.write("				const reviewName = document.createElement('h4');\r\n");
      out.write("				const reviewContent = document.createElement('p');\r\n");
      out.write("\r\n");
      out.write("				reviewName.textContent = reviewerName;\r\n");
      out.write("				reviewContent.textContent = reviewText;\r\n");
      out.write("				newReview.appendChild(reviewName);\r\n");
      out.write("				newReview.appendChild(reviewContent);\r\n");
      out.write("				reviewSection.appendChild(newReview);\r\n");
      out.write("\r\n");
      out.write("				$('#reviewModal').modal('hide');\r\n");
      out.write("				document.getElementById('reviewForm').reset();\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			function toggleWishlist(btn) {\r\n");
      out.write("				var heartIcon = btn.querySelector(\"i\");\r\n");
      out.write("\r\n");
      out.write("				if (heartIcon.classList.contains(\"fa-heart-o\")) {\r\n");
      out.write("					heartIcon.classList.remove(\"fa-heart-o\");\r\n");
      out.write("					heartIcon.classList.add(\"fa-heart\");\r\n");
      out.write("				} else {\r\n");
      out.write("					heartIcon.classList.remove(\"fa-heart\");\r\n");
      out.write("					heartIcon.classList.add(\"fa-heart-o\");\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("		\r\n");
      out.write("\r\n");
      out.write("			\r\n");
      out.write("			</script>\r\n");
      out.write("		<script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>\r\n");
      out.write("		<script\r\n");
      out.write("			src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js\"></script>\r\n");
      out.write("		<script\r\n");
      out.write("			src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	<!-- 푸터 -->\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/layout/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
