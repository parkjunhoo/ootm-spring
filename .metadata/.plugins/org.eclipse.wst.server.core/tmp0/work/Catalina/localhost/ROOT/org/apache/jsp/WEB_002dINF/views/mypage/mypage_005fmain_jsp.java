/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-05-02 08:06:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.mypage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import kr.team3.ootm.dao.member.MemberDTO;

public final class mypage_005fmain_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("kr.team3.ootm.dao.member.MemberDTO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');

if(session.getAttribute("loginUser") != null)
{
	MemberDTO loginUser = (MemberDTO)session.getAttribute("loginUser");
	System.out.println("비밀번호:"+loginUser.getMember_password());
}

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>마이페이지 메인</title>\n");
      out.write("<!-- 글꼴 -->\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n");
      out.write("<link\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Noto+Sans+KR:wght@100;300;400;500;700;900&display=swap\"\n");
      out.write("	rel=\"stylesheet\">\n");
      out.write("\n");
      out.write("\n");
      out.write("<link rel=\"icon\" href=\"/images/favicon.ico\">\n");
      out.write("<link rel=\"stylesheet\" href=\"/css/view/all.css\" />\n");
      out.write("\n");
      out.write("<style type=\"text/css\">\n");
      out.write("/* 네비게이터 박스 css */\n");
      out.write(".page-container {\n");
      out.write("	margin-top: 80px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".page-navigation {\n");
      out.write("	float: left;\n");
      out.write("	margin-top: 52px;\n");
      out.write("	width: 250px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".page-navigation ul li {\n");
      out.write("	font-size: 16px;\n");
      out.write("	padding-bottom: 15px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".page-navigation ul li a {\n");
      out.write("	position: relative;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".page-navigation ul .current {\n");
      out.write("	font-weight: 700;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".page-navigation li a:after {\n");
      out.write("	background-color: #222;\n");
      out.write("	content: '';\n");
      out.write("	position: absolute;\n");
      out.write("	bottom: -5px;\n");
      out.write("	left: 0;\n");
      out.write("	width: 0;\n");
      out.write("	height: 1px;\n");
      out.write("	transition: width 0.25s ease-out;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".page-navigation li a:hover:after {\n");
      out.write("	width: 100%;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 컨텐츠 박스 */\n");
      out.write(".page-content {\n");
      out.write("	float: right;\n");
      out.write("	width: calc(100% - 250px);\n");
      out.write("	min-height: 40vh;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".page-content .section-title {\n");
      out.write("	margin-top: 0;\n");
      out.write("	margin-bottom: 50px;\n");
      out.write("	border-top: 2px solid #222;\n");
      out.write("	padding-top: 50px;\n");
      out.write("	position: relative;\n");
      out.write("}\n");
      out.write("\n");
      out.write("h4 {\n");
      out.write("	font-size: 18px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".account-menu {\n");
      out.write("	position: absolute;\n");
      out.write("	top: 55px;\n");
      out.write("	right: 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".account-menu a {\n");
      out.write("	font-weight: 500;\n");
      out.write("	margin-left: 20px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".page-content .section {\n");
      out.write("	margin-bottom: 50px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".account-summary {\n");
      out.write("	display: flex;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".account-summary .item {\n");
      out.write("	flex: auto;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".account-summary .item .label {\n");
      out.write("	margin-bottom: 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".account-summary .item .label a:after {\n");
      out.write("	content: '>>';\n");
      out.write("	font-family: 'Ionicons';\n");
      out.write("	font-weight: 900;\n");
      out.write("	margin-left: 5px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".account-summary .item .value {\n");
      out.write("	font-size: 28px;\n");
      out.write("	font-weight: 600;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".account-summary .membership-grade .value {\n");
      out.write("	font-size: 32px;\n");
      out.write("	font-weight: 700;\n");
      out.write("	color: #c0c4c4;\n");
      out.write("	position: relative;\n");
      out.write("	top: -3px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".page-content .info-list {\n");
      out.write("	margin-top: 50px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".page-content .info-list li {\n");
      out.write("	padding-left: 12px;\n");
      out.write("	padding-bottom: 5px;\n");
      out.write("	position: relative;\n");
      out.write("	line-height: 1.65;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".info-list li:before {\n");
      out.write("	content: '\\00b7';\n");
      out.write("	font-size: 20px;\n");
      out.write("	position: absolute;\n");
      out.write("	top: -7px;\n");
      out.write("	left: 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 주문내역이 없습니다. */\n");
      out.write(".page-content .section {\n");
      out.write("	margin-bottom: 50px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".empty-list {\n");
      out.write("	border-top: 1px solid #dcdcdc;\n");
      out.write("	padding-top: 50px;\n");
      out.write("	font-size: 15px;\n");
      out.write("	color: #aaa;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 푸터고정 */\n");
      out.write(".footer {\n");
      out.write("	clear: both;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("	<!-- 세션에서 아이디 받아오기 -->\n");
      out.write("	");
 
	MemberDTO member=(MemberDTO)session.getAttribute("loginUser");
	String member_id=member.getMember_id();
	
      out.write("\n");
      out.write("	\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/layout/header.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("logoDark", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("true", request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("logoHoverDark", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("true", request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("mTextColor", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("black", request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("menuBtnColor", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("black", request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("bgHoverColor", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("#F9F9F9", request.getCharacterEncoding()) + "&" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("bgScrollColor", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("white", request.getCharacterEncoding()), out, false);
      out.write("\n");
      out.write("\n");
      out.write("	<div class=\"all-margin\">\n");
      out.write("		<div class=\"page-header\">\n");
      out.write("			<h2>My Page</h2>\n");
      out.write("		</div>\n");
      out.write("\n");
      out.write("		<div class=\"page-container mypage\" data-page-title=\"orders\">\n");
      out.write("			<!-- 왼쪽 -->\n");
      out.write("			<div class=\"page-navigation\">\n");
      out.write("				<ul>\n");
      out.write("					<li data-page-target=\"dashboard\" class=\"current\"><a href=\"/mypage\">마이페이지</a></li>\n");
      out.write("					<li data-page-target=\"orders\"><a href=\"/mypage/orderlist\">주문내역</a></li>\n");
      out.write("					<li data-page-target=\"wishlist\"><a\n");
      out.write("						href=\"/mypage/wishlist\">위시리스트</a></li>\n");
      out.write("					<li data-page-target=\"coupons\"><a\n");
      out.write("						href=\"/mypage/coupon\">쿠폰</a></li>\n");
      out.write("					<li data-page-target=\"points\"><a href=\"/mypage/reserve\">적립금</a></li>\n");
      out.write("					<li data-page-target=\"balance\"><a href=\"/mypage/deposit\">예치금</a></li>\n");
      out.write("					<li data-page-target=\"support\"><a href=\"/mypage/inquiry\">문의내역</a></li>\n");
      out.write("				</ul>\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("			<div class=\"page-content\">\n");
      out.write("				<!-- 첫번째 박스 -->\n");
      out.write("				<div class=\"section-title\">\n");
      out.write("					<h4>");
      out.print(member.getMember_name() );
      out.write("님 안녕하세요!</h4>\n");
      out.write("					<div class=\"account-menu\">\n");
      out.write("						<a href=\"/delete/member?member_id=");
      out.print(member_id );
      out.write("\">회원탈퇴</a> <a href=\"\">로그아웃</a>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"section\">\n");
      out.write("					<div class=\"account-summary\">\n");
      out.write("						<div class=\"item membership-grade\">\n");
      out.write("							<div class=\"label\">\n");
      out.write("								<a href=\"#\">등급</a>\n");
      out.write("							</div>\n");
      out.write("							<div class=\"value\" data-member-grade=\"\">Group</div>\n");
      out.write("						</div>\n");
      out.write("						<div class=\"item\">\n");
      out.write("							<div class=\"label\">\n");
      out.write("								<a href=\"#\">쿠폰</a>\n");
      out.write("							</div>\n");
      out.write("							<div class=\"value\">0장</div>\n");
      out.write("						</div>\n");
      out.write("						<div class=\"item\">\n");
      out.write("							<div class=\"label\">\n");
      out.write("								<a href=\"#\">적립금</a>\n");
      out.write("							</div>\n");
      out.write("							<div class=\"value\">2000원</div>\n");
      out.write("						</div>\n");
      out.write("						<div class=\"item\">\n");
      out.write("							<div class=\"label\">\n");
      out.write("								<a href=\"#\">예치금</a>\n");
      out.write("							</div>\n");
      out.write("							<div class=\"value\">0원</div>\n");
      out.write("						</div>\n");
      out.write("						<div class=\"item\">\n");
      out.write("							<div class=\"label\">\n");
      out.write("								<a href=\"#\">누적주문금액</a>\n");
      out.write("							</div>\n");
      out.write("							<div class=\"value\">0원</div>\n");
      out.write("						</div>\n");
      out.write("					</div>\n");
      out.write("					<div class=\"info-list\">\n");
      out.write("						<ul>\n");
      out.write("							<li>평생회원 전환으로 Lifetime 등급이 되면 더 많은 혜택을 받으실 수 있습니다.</li>\n");
      out.write("						</ul>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("\n");
      out.write("				<div class=\"section-title\">\n");
      out.write("					<h4>최근 주문</h4>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"section page-list order-list\">\n");
      out.write("					<div class=\"empty-list\">주문내역이 없습니다.</div>\n");
      out.write("				</div>\n");
      out.write("\n");
      out.write("				<div class=\"section-title\">\n");
      out.write("					<h4>오늘 본 상품</h4>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"section recommendations\">\n");
      out.write("					<div class=\"product-list\"></div>\n");
      out.write("				</div>\n");
      out.write("\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("	<div class=\"footer\">\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/layout/footer.jsp", out, false);
      out.write("\n");
      out.write("	</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
