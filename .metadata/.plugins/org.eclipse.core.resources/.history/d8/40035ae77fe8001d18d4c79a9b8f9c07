package kr.team3.ootm.dao.order;

import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

@Repository
public class OrderDAOImpl implements OrderDAO {
    @Autowired
    private JdbcTemplate jdbcTemplate;

    private static final String INSERT_ORDER = "INSERT INTO ootm_order (guest_order_id, order_date) VALUES (?, ?)";
    private static final String SELECT_ORDER = "SELECT * FROM ootm_order WHERE order_number = ?";
    private static final String SELECT_ALL_ORDERS = "SELECT * FROM ootm_order";
    private static final String UPDATE_ORDER = "UPDATE ootm_order SET guest_order_id = ?, order_date = ? WHERE order_number = ?";
    private static final String DELETE_ORDER = "DELETE FROM ootm_order WHERE order_number = ?";

    @Override
    public void insertOrder(Order order) {
        jdbcTemplate.update(INSERT_ORDER, order.getGuestOrderId(), order.getOrderDate());
    }

    @Override
    public Order getOrder(int orderNumber) {
        return jdbcTemplate.queryForObject(SELECT_ORDER, new Object[]{orderNumber}, new OrderRowMapper());
    }

    @Override
    public List<Order> getAllOrders() {
        return jdbcTemplate.query(SELECT_ALL_ORDERS, new OrderRowMapper());
    }

    @Override
    public void updateOrder(Order order) {
        jdbcTemplate.update(UPDATE_ORDER, order.getGuestOrderId(), order.getOrderDate(), order.getOrderNumber());
    }

    @Override
    public void deleteOrder(int orderNumber) {
        jdbcTemplate.update(DELETE_ORDER, orderNumber);
    }

    private static final class OrderRowMapper implements RowMapper<Order> {
        public Order mapRow(ResultSet resultSet, int rowNum) throws SQLException {
            Order order = new Order();
            order.setOrderNumber(resultSet.getInt("order_number"));
            order.setGuestOrderId(resultSet.getInt("guest_order_id"));
            order.setOrderDate(resultSet.getDate("order_date"));
            return order;
        }
    }
}

